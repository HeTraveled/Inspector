<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.home.mapper.AnnouncementStateMapper" >
  <resultMap id="BaseResultMap" type="com.home.model.AnnouncementState" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="aid" property="aid" jdbcType="INTEGER" />
    <result column="uid" property="uid" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="readstate" property="readstate" jdbcType="INTEGER" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, aid, uid, state,readstate,remarks
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from announcement_state
    where id = #{id,jdbcType=INTEGER}
  </select>
   <select id="selectsize" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
   select
   a_s.*
    from announcement a,announcement_state a_s
     where
 FIND_IN_SET(#{uid},a.`range`) 
 and a.state=1 
 and a.remove=0
and a_s.aid=a.id 
and a_s.uid=#{uid,jdbcType=INTEGER}
 and a_s.state=0
   
  
  </select>
   <select id="selectanncsize" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from announcement_state
    where aid = #{aid,jdbcType=INTEGER}
   </select>
    <select id="selectstatesize" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
   *
    from announcement_state
    where aid = #{aid,jdbcType=INTEGER}
    and state=1
   </select>
    <select id="select" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from announcement_state
    where aid = #{aid,jdbcType=INTEGER}
    	and  uid=#{uid,jdbcType=INTEGER}
  </select>
  <select id="selectall" resultType="com.home.model.AnnouncementState" parameterType="java.lang.Integer">
   SELECT
	a.*,u.`name`
	FROM announcement_state a,`user` u
	WHERE a.uid=u.uid
	and  a.aid=#{aid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from announcement_state
    where aid = #{aid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.home.model.AnnouncementState" >
    insert into announcement_state (id, aid, uid, 
      state,readstate,remarks)
    values (#{id,jdbcType=INTEGER}, #{aid,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, 
      #{state,jdbcType=INTEGER},#{readstate,jdbcType=INTEGER},#{remarks,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.home.model.AnnouncementState" >
    insert into announcement_state
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="aid != null" >
        aid,
      </if>
      <if test="uid != null" >
        uid,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="readstate != null">
		readstate,
	  </if>
	   <if test="remarks != null">
		remarks,
	  </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="aid != null" >
        #{aid,jdbcType=INTEGER},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="readstate != null">
		#{readstate,jdbcType=INTEGER},
		</if>
		 <if test="remarks != null">
		#{remarks,jdbcType=VARCHAR},
		</if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.home.model.AnnouncementState" >
    update announcement_state
    <set >
      <if test="aid != null" >
        aid = #{aid,jdbcType=INTEGER},
      </if>
      <if test="uid != null" >
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="readstate != null">
		readstate=#{readstate,jdbcType=INTEGER},
	  </if>
	   <if test="remarks != null">
		remarks=#{remarks,jdbcType=VARCHAR},
	  </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updatestate" parameterType="com.home.model.AnnouncementState" >
    update announcement_state
    <set>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
    </set>
    where aid = #{aid,jdbcType=INTEGER}
    and	uid=#{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.home.model.AnnouncementState" >
    update announcement_state
    set aid = #{aid,jdbcType=INTEGER},
      uid = #{uid,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      readstate = #{readstate,jdbcType=INTEGER},
       remarks = #{remarks,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="createList" parameterType="java.util.List" >
    insert announcement_state (id, aid, uid,state,readstate,remarks
      )values 
    <foreach collection="list" item="item" index="index"
			separator=",">
    (null, 
    	#{item.aid,jdbcType=INTEGER}, 
    	#{item.uid,jdbcType=INTEGER},
    	#{item.state,jdbcType=INTEGER},
    	#{item.readstate,jdbcType=INTEGER},
    	null
     )
      </foreach>
  </insert>
  <update id="updatereadstate" parameterType="com.home.model.AnnouncementState">
		update announcement_state
		<set>
			 <if test="readstate != null">
			readstate=#{readstate,jdbcType=INTEGER}
	 		 </if>
		</set>
		where aid = #{aid,jdbcType=INTEGER}
		and   uid = #{uid,jdbcType=INTEGER}
		
	</update>
</mapper>