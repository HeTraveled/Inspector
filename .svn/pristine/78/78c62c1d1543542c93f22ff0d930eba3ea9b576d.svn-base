<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.plan.mapper.MonthPlanNextMapper" >
  <resultMap id="BaseResultMap" type="com.plan.model.MonthPlanNext" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="mid" property="mid" jdbcType="INTEGER" />
    <result column="body" property="body" jdbcType="VARCHAR" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, mid, body, start_time, end_time, state
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from month_plan_next
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectthismonthsplan" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from month_plan_next
    where mid = #{mid,jdbcType=INTEGER}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from month_plan_next
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.plan.model.MonthPlanNext" >
    insert into month_plan_next (id, mid, body, 
      start_time, end_time, state
      )
    values (#{id,jdbcType=INTEGER}, #{mid,jdbcType=INTEGER}, #{body,jdbcType=VARCHAR}, 
      #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{state,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.plan.model.MonthPlanNext" >
    insert into month_plan_next
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="mid != null" >
        mid,
      </if>
      <if test="body != null" >
        body,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="mid != null" >
        #{mid,jdbcType=INTEGER},
      </if>
      <if test="body != null" >
        #{body,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.plan.model.MonthPlanNext" >
    update month_plan_next
    <set >
      <if test="mid != null" >
        mid = #{mid,jdbcType=INTEGER},
      </if>
      <if test="body != null" >
        body = #{body,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.plan.model.MonthPlanNext" >
    update month_plan_next
    set mid = #{mid,jdbcType=INTEGER},
      body = #{body,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="creatMonthPlanNext" parameterType="java.util.List" >
    insert into month_plan_next (id, mid, body, 
      start_time, end_time, state
      )values 
    <foreach collection="list" item="item" index="index"
			separator=",">
    (null, 
    	#{item.mid,jdbcType=INTEGER}, 
    	#{item.body,jdbcType=VARCHAR}, 
     	#{item.startTime,jdbcType=TIMESTAMP}, 
        #{item.endTime,jdbcType=TIMESTAMP}, 
        #{item.state,jdbcType=INTEGER}
      )
      </foreach>
  </insert>
  
  <select id="monthplannextoverdue" resultMap="BaseResultMap">
  	select 
  	 <include refid="Base_Column_List" />
  	 from month_plan_next
  	 where state=1
  	 and now()>end_time
  </select>
    <update id="updateOverdue" parameterType="java.util.List">
            update month_plan_next set state=3 where id in
           <foreach collection="list" item="id" index="index" separator="," open="(" close=")">
        	#{id}
    </foreach>
  </update>
</mapper>