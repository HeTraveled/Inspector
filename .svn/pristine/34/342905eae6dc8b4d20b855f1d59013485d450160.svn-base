<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.plan.mapper.WeeksPlanMapper" >
  <resultMap id="BaseResultMap" type="com.plan.model.WeeksPlan" >
    <id column="wid" property="wid" jdbcType="INTEGER" />
    <result column="uid" property="uid" jdbcType="INTEGER" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="years" property="years" jdbcType="INTEGER" />
    <result column="weeks" property="weeks" jdbcType="INTEGER" />
    <result column="months" property="months" jdbcType="INTEGER" />
     <result column="type" property="type" jdbcType="INTEGER" />
     <result column="name" property="name" jdbcType="VARCHAR" />
     <result column="departmentname" property="departmentname" jdbcType="VARCHAR" />
     <result column="leadershipname" property="leadershipname" jdbcType="VARCHAR" />
     <result column="principalname" property="principalname" jdbcType="VARCHAR" />
     <collection property="weekplan" column="wid"  select="com.plan.mapper.WeeksPlanNextMapper.selectbynext" />
  </resultMap>
    <resultMap id="BaseResultMap2" type="com.plan.model.WeeksPlan" >
    <id column="wid" property="wid" jdbcType="INTEGER" />
    <result column="uid" property="uid" jdbcType="INTEGER" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="years" property="years" jdbcType="INTEGER" />
    <result column="weeks" property="weeks" jdbcType="INTEGER" />
    <result column="months" property="months" jdbcType="INTEGER" />
      <result column="type" property="type" jdbcType="INTEGER" />
        <collection property="weeksPlanNext" column="wid"  select="com.plan.mapper.WeeksPlanNextMapper.selectEme" />
  </resultMap>
  <sql id="Base_Column_List" >
    wid, uid, remarks, create_time, years,weeks,months,type
  </sql>
  <select id="selectEme" parameterType="int" resultMap="BaseResultMap2" >
  	  select 
    <include refid="Base_Column_List" />
    from weeks_plan
    where years=#{year} and months=#{month} and weeks=#{week} and type=1
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from weeks_plan
    where wid = #{wid,jdbcType=INTEGER}
  </select>
   <select id="selectlist" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from weeks_plan
   ORDER BY weeks_plan.create_time DESC LIMIT 52
    
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from weeks_plan
    where wid = #{wid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.plan.model.WeeksPlan" >
    insert into weeks_plan (wid, uid, remarks, 
      create_time, years,weeks,months,type)
    values (#{wid,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{remarks,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP},#{years,jdbcType=INTEGER},#{weeks,jdbcType=INTEGER},#{months,jdbcType=INTEGER},#{type,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.plan.model.WeeksPlan" >
  	<selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="wid">
          SELECT LAST_INSERT_ID()
      </selectKey>
    insert into weeks_plan
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="wid != null" >
        wid,
      </if>
      <if test="uid != null" >
        uid,
      </if>
      <if test="remarks != null" >
        remarks,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="years != null" >
        years,
      </if>
      <if test="weeks != null" >
       weeks,
      </if>
       <if test="months != null" >
       months,
      </if>
       <if test="type != null" >
       type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="wid != null" >
        #{wid,jdbcType=INTEGER},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="years != null" >
         #{years,jdbcType=INTEGER},
      </if>
      <if test="weeks != null" >
         #{weeks,jdbcType=INTEGER},
      </if>
      <if test="months != null" >
     #{months,jdbcType=INTEGER},
      </if>
       <if test="type != null" >
     #{type,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.plan.model.WeeksPlan" >
    update weeks_plan
    <set >
      <if test="uid != null" >
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="years != null" >
         #{years,jdbcType=INTEGER},
      </if>
      <if test="weeks != null" >
         #{weeks,jdbcType=INTEGER},
      </if>
      <if test="months != null" >
         #{months,jdbcType=INTEGER},
      </if>
       <if test="type != null" >
     #{type,jdbcType=INTEGER},
      </if>
    </set>
    where wid = #{wid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.plan.model.WeeksPlan" >
    update weeks_plan
    set uid = #{uid,jdbcType=INTEGER},
      remarks = #{remarks,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      years = #{years,jdbcType=INTEGER},
      weeks = #{weeks,jdbcType=INTEGER},
      months = #{months,jdbcType=INTEGER},
       type = #{type,jdbcType=INTEGER},
    where wid = #{wid,jdbcType=INTEGER}
  </update>
  
  <select id="selectall"  parameterType="com.plan.model.WeeksPlan" resultMap="BaseResultMap" >
    select 
    w.*, u.`name` ,d.departmentname,u2.`name` as leadershipname,u3.`name` as principalname
    from weeks_plan w,`user` u,department d,`user` u2,`user` u3
		WHERE w.uid=u.uid
		and u.did=d.id
		and d.leadership=u2.uid
		and d.principal=u3.uid
		and w.years=#{years,jdbcType=INTEGER}
		and w.weeks=#{weeks,jdbcType=INTEGER}
		ORDER BY d.id
  </select>
  <select id="weeksplanauditleader" parameterType="com.plan.model.WeeksPlan" resultMap="BaseResultMap" >
	 select 
	  w.*,u.name,d.departmentname,u2.`name` as leadership
		from weeks_plan w,`user` u,department d,`user` u2
	<where> 
		w.uid=u.uid
		and u.did=d.id
		and d.leadership=u2.uid
		
		and w.years=#{year,jdbcType=INTEGER}
		and w.weeks=#{month,jdbcType=INTEGER}
		and d.id=#{did,jdbcType=INTEGER}
	</where>
  </select>
  <select id="selectlastweek"  parameterType="com.plan.model.WeeksPlan" resultMap="BaseResultMap" >
 
	  select 
	    *	
	    from weeks_plan
		<where>
		 (FIND_IN_SET(#{lastweek},weeks_plan.`weeks`))
	  	and (FIND_IN_SET(#{year},weeks_plan.`years`))
	    and (FIND_IN_SET(#{uid},weeks_plan.`uid`))
 </where>
  </select>
  <select id="selectrole" parameterType="com.home.model.User" resultType="com.home.model.User" >
  SELECT * FROM `user` 
  <where> 
  	did  like "%100001%"
			and uid=#{uid,jdbcType=INTEGER}
</where>
  </select>
  <select id="selectcommon" parameterType="com.plan.model.WeeksPlan" resultMap="BaseResultMap" >
		   select 
		m.*
		from weeks_plan m,`user` u
		
		<where>
		 m.uid=u.uid
		
		and u.did=#{did,jdbcType=INTEGER}
</where>
  </select>
   <select id="selectweekdept" parameterType="com.plan.model.WeeksPlan" resultMap="BaseResultMap" >
		   select 
		 w.*
		from weeks_plan w,`user` u,department d
		
		<where>
			w.uid=u.uid	
		and u.did=d.id
		and u.did=#{did,jdbcType=INTEGER}
		and w.years=#{years,jdbcType=INTEGER}
		and w.weeks=#{weeks,jdbcType=INTEGER}
		
</where>
  </select>
   <select id="selectdeptsize" parameterType="com.home.model.User" resultType="com.home.model.User" >
  SELECT * FROM `user` 
  <where> 
  	did  like  CONCAT('%','${did}','%')
	
</where>
  </select>
  
</mapper>