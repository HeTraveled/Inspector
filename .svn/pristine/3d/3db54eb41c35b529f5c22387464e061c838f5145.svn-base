<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dept.mapper.DeptMapper" >
  <resultMap id="BaseResultMap" type="com.dept.model.Dept" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="departmentname" property="departmentname" jdbcType="VARCHAR" />
    <result column="top_did" property="topDid" jdbcType="INTEGER" />
    <result column="tel" property="tel" jdbcType="VARCHAR" />
    <result column="fax" property="fax" jdbcType="VARCHAR" />
    <result column="principal" property="principal" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR"/>
     <result column="leadership" property="leadership" jdbcType="INTEGER" />
    <collection property="dept" column="id"  select="com.dept.mapper.DeptMapper.selecttopid" />
    <collection property="user" column="id"  select="com.home.mapper.UserMapper.selectbytree" />
	</resultMap>
	<resultMap id="BaseResultMap2" type="com.dept.model.Dept" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="departmentname" property="departmentname" jdbcType="VARCHAR" />
    <result column="top_did" property="topDid" jdbcType="INTEGER" />
    <result column="tel" property="tel" jdbcType="VARCHAR" />
    <result column="fax" property="fax" jdbcType="VARCHAR" />
    <result column="principal" property="principal" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR"/>
     <result column="leadership" property="leadership" jdbcType="INTEGER" />
    <collection property="dept" column="id"  select="com.dept.mapper.DeptMapper.selectleadership" />
   </resultMap>
   <resultMap id="BaseResultMap3" type="com.dept.model.Dept" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="departmentname" property="departmentname" jdbcType="VARCHAR" />
    <result column="top_did" property="topDid" jdbcType="INTEGER" />
    <result column="tel" property="tel" jdbcType="VARCHAR" />
    <result column="fax" property="fax" jdbcType="VARCHAR" />
    <result column="principal" property="principal" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR"/>
     <result column="leadership" property="leadership" jdbcType="INTEGER" />
    <collection property="yearlist" column="id"  select="com.dept.mapper.DeptMapper.selectleadership" />
   </resultMap>
	
  <sql id="Base_Column_List" >
    id, departmentname, top_did, tel, fax, principal,leadership
  </sql>
  <!-- 部门负责人 -->
  <select id="principal" resultType="com.dept.model.Dept" parameterType="java.lang.Integer">
  	select  
  	<include refid="Base_Column_List" />  
  	from department where principal=#{principal} 
  </select>
<!-- 部门负责人计数 -->
  <select id="countPri" resultType="int" parameterType="java.lang.Integer">
  	select 
  count(id)
  	from department where principal=#{uid} 
  </select>
  <!-- 部门分管领导计数 -->
    <select id="countLead" resultType="int" parameterType="java.lang.Integer">
  	select count(id) from department where leadership=#{uid} 
  </select>
<!--    查询父，嵌套执行selecttopid方法，将父id作为参数传递查出子类，再嵌套执行selectbytree方法查询出隶属部门的角色-->

  <select id="selectSupervisor" resultType="java.lang.String" parameterType="java.lang.Integer">
  	 select 
    	name
    from`user` 
    where uid=(select leadership from department where id=#{id})
  </select>

    <select id="display" resultMap="BaseResultMap">
  	 select 
    <include refid="Base_Column_List" />
    from department
    where top_did = 0 and trim(department.departmentname) not in ('未设置')
  </select>
      <select id="selecttopid" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from department
    where top_did = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByPrimaryKey" resultType="com.dept.model.Dept" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from department
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="select"  resultType="com.dept.model.Dept" flushCache="true">
		select d.*,u1.`name` as principalname,u2.`name` as leadershipname
		 from department d left JOIN `user` u1 on d.principal=u1.uid left join `user` u2 on d.leadership=u2.uid
		 where id=#{did,jdbcType=INTEGER}
</select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from department
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.dept.model.Dept" >
    insert into department (id, departmentname, top_did, 
      tel, fax, principal,leadership
      )
    values (#{id,jdbcType=INTEGER}, #{departmentname,jdbcType=VARCHAR}, #{topDid,jdbcType=INTEGER}, 
      #{tel,jdbcType=VARCHAR}, #{fax,jdbcType=VARCHAR}, #{principal,jdbcType=INTEGER},#{leadership,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.dept.model.Dept" >
    insert into department
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="departmentname != null" >
        departmentname,
      </if>
      <if test="topDid != null" >
        top_did,
      </if>
      <if test="tel != null" >
        tel,
      </if>
      <if test="fax != null" >
        fax,
      </if>
      <if test="principal != null" >
        principal,
      </if>
            <if test="leadership != null" >
        leadership,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="departmentname != null" >
        #{departmentname,jdbcType=VARCHAR},
      </if>
      <if test="topDid != null" >
        #{topDid,jdbcType=INTEGER},
      </if>
      <if test="tel != null" >
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="fax != null" >
        #{fax,jdbcType=VARCHAR},
      </if>
      <if test="principal != null" >
        #{principal,jdbcType=INTEGER},
      </if>
            <if test="leadership != null" >
        #{leadership,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.dept.model.Dept" >
    update department
    <set >
      <if test="departmentname != null" >
        departmentname = #{departmentname,jdbcType=VARCHAR},
      </if>
      <if test="topDid != null" >
        top_did = #{topDid,jdbcType=INTEGER},
      </if>
      <if test="tel != null" >
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="fax != null" >
        fax = #{fax,jdbcType=VARCHAR},
      </if>
      <if test="principal != null" >
        principal = #{principal,jdbcType=INTEGER},
      </if>
            <if test="leadership != null" >
        leadership = #{leadership,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dept.model.Dept" >
    update department
    set departmentname = #{departmentname,jdbcType=VARCHAR},
      top_did = #{topDid,jdbcType=INTEGER},
      tel = #{tel,jdbcType=VARCHAR},
      fax = #{fax,jdbcType=VARCHAR},
      principal = #{principal,jdbcType=INTEGER},
       leadership = #{leadership,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <select id="findByDeptName" parameterType="String" resultType="com.dept.model.Dept" flushCache="true">
		select * from department where departmentname=#{departmentname}
	</select>
	<insert id="deptsave" parameterType="com.dept.model.Dept"
		useGeneratedKeys="true" keyProperty="id">
		insert into department
		(departmentname)
		values( #{departmentname,jdbcType=NCHAR})
		
	</insert>
	  <select id="selectdept" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from department
    where departmentname = #{departmentname}
  </select>
  
  <select id="selectall"  resultMap="BaseResultMap" flushCache="true">
		select  
		<include refid="Base_Column_List" />
		 from department 
		 where trim(department.departmentname) not in ('未设置')
		 and trim(department.departmentname) not in ('集团本部')
		 and trim(department.departmentname) not in ('子公司')
	</select>
	
	<select id="all"  resultMap="BaseResultMap" flushCache="true">
		select  
		<include refid="Base_Column_List" />
		 from department 
		 where trim(department.departmentname) not in ('未设置')
		 
	</select>
	
<!-- <select id="selectname" parameterType="java.lang.String" resultMap="BaseResultMap">
select 
<include refid="Base_Column_List" /> 
from department
<where>
<if test="departmentname!=null">
 departmentname like CONCAT('%','${departmentname}','%')
</if>
</where>
 order by id
</select>  -->

 <select id="selectdid" parameterType="java.lang.String" 	resultType="com.home.model.User">
select 
*

from `user` as u left join department d on u.did=d.id
<where>
did=#{did}

</where>
 order by u.uid
</select> 

<!-- <select id="selectdid" parameterType="com.dept.model.Dept" resultMap="BaseResultMap">
select 
d.*,u.name as uname
from department d,user u
<where>
   d.principal=u.uid 
  	
</where>
 ${orderby}
</select>  -->
<select id="selectname"  resultType="com.dept.model.Dept" flushCache="true">

		

		select d.*,u1.`name` as principalname,u2.`name` as leadershipname
		 from department d left JOIN `user` u1 on d.principal=u1.uid left join `user` u2 on d.leadership=u2.uid
		 where trim(d.departmentname) not in ('未设置')
</select>
<select id="selectscoreName"  resultType="com.dept.model.Dept" flushCache="true">
		select d.*,u1.`name` as principalname,u2.`name` as leadershipname
		 from department d left JOIN `user` u1 on d.principal=u1.uid left join `user` u2 on d.leadership=u2.uid
		 where trim(d.departmentname) not in ('未设置') and trim(d.departmentname) not in ('集团本部')
		 and trim(d.departmentname) not in ('子公司')  and trim(d.departmentname) not in ('集团领导')
</select>
<!-- 搜索topid判断是否可以删除 -->
<select id="selecttopDid" parameterType="java.lang.String" resultMap="BaseResultMap">
select 
<include refid="Base_Column_List" /> 
from department
<where>
<if test="_parameter !=null">
 top_did like CONCAT('%','${_parameter }','%')
</if>
</where>

</select> 
<select id="selectLeadership" parameterType="java.lang.Integer" resultType="com.home.model.User">
select 
u.*
from department d,user u
where d.leadership=u.uid 
and d.id=#{id}
</select>  
</mapper>