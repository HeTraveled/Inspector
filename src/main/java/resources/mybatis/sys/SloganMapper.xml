<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sys.mapper.SloganMapper" >
  <resultMap id="BaseResultMap" type="com.sys.model.Slogan" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
     <result column="title2" property="title2" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="first" property="first" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, title, state, `first`,title2
  </sql>
    <update id="updaterandom" parameterType="java.lang.Integer" >
  	update slogan set first=0 where first=1
  </update>
  <update id="first" parameterType="java.lang.Integer" >
  	update slogan set first=1 where id=#{id};
  </update>
  <select id="randomNum" resultMap="BaseResultMap">
  	select 
  	 <include refid="Base_Column_List" />
  	from slogan where first=1
  </select>
  <select id="random" resultMap="BaseResultMap">
  	SELECT t1.*
	FROM slogan AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM slogan)-(SELECT MIN(id) FROM slogan))+(SELECT MIN(id) FROM slogan)) AS id) AS t2
	WHERE t1.id >= t2.id and t1.state=1 LIMIT 1;
 </select>
  <select id="display" resultMap="BaseResultMap" parameterType="com.sys.model.Slogan" >
  	   select 
    <include refid="Base_Column_List" />
    from slogan
    order by `first` desc
  </select>
      <delete id="deletes" parameterType="java.util.List">
		delete from slogan where id in
		<foreach collection="list" item="id" index="index" open="("
			separator="," close=")">
			#{id}
		</foreach>
	</delete>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from slogan
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from slogan
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sys.model.Slogan" >
    insert into slogan (id, title, state, 
     `first`,title2)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, 
      #{first,jdbcType=INTEGER}, #{title2,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sys.model.Slogan" >
    insert into slogan
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="first != null" >
        `first`,
      </if>
            <if test="title2 != null" >
        title2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="first != null" >
        #{first,jdbcType=INTEGER},
      </if>
            <if test="title2 != null" >
        #{title2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sys.model.Slogan" >
    update slogan
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="first != null" >
        `first` = #{first,jdbcType=INTEGER},
      </if>
            <if test="title2 != null" >
        title2 = #{title2,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sys.model.Slogan" >
    update slogan
    set title = #{title,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      `first` = #{first,jdbcType=INTEGER},
      title2 = #{title2,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>